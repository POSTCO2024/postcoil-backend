version: '1'
services:
  operation:
    build:
      context: ./operation
      dockerfile: ./operation/Dockerfile
    image: ${ECR_REGISTRY}/postco-apps:operation-${TAG}
    mem_limit: 512m
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_HOST}:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_URL}:3306/operation
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}
    volumes:
      - /var/app/logs/operation:/app/logs

  control:
    build:
      context: ./control  # control 모듈 경로 지정
      dockerfile: ./control/Dockerfile
    image: ${ECR_REGISTRY}/postco-apps:control-${TAG}
    mem_limit: 512m
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_HOST}:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_URL}:3306/control
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}
    volumes:
      - /var/app/logs/control:/app/logs

  schedule:
    build:
      context: ./schedule  # schedule 모듈 경로 지정
      dockerfile: ./schedule/Dockerfile
    image: ${ECR_REGISTRY}/postco-apps:schedule-${TAG}
    mem_limit: 512m
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_HOST}:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_URL}:3306/schedule
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}
    volumes:
      - /var/app/logs/schedule:/app/logs

  cache-service:
    build:
      context: ./cache-service  # cache-service 모듈 경로 지정
      dockerfile: ./cache-service/Dockerfile
    image: ${ECR_REGISTRY}/postco-apps:cache-service-${TAG}
    mem_limit: 512m
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://${EUREKA_HOST}:8761/eureka/
      - SPRING_REDIS_HOST=${REDIS_HOST}
      - SPRING_REDIS_PORT=${REDIS_PORT}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BROKER}
    volumes:
      - /var/app/logs/cache-service:/app/logs