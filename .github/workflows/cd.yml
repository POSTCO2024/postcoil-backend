name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4

      - name: Download Elastic Beanstalk packages
        uses: actions/download-artifact@v4
        with:
          name: eb-packages
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download docker-compose.yml
        uses: actions/download-artifact@v4
        with:
          name: docker-compose
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Gateway to Elastic Beanstalk
        run: |
          aws s3 cp gateway-package.zip s3://${{ secrets.EB_GATEWAY_BUCKET }}/gateway-${{ github.sha }}.zip
          aws elasticbeanstalk create-application-version \
            --application-name gateway \
            --version-label gateway-${{ github.sha }} \
            --source-bundle S3Bucket="${{ secrets.EB_GATEWAY_BUCKET }}",S3Key="gateway-${{ github.sha }}.zip"
          aws elasticbeanstalk update-environment \
            --environment-name gateway-env \
            --version-label gateway-${{ github.sha }}

      - name: Deploy Eureka to Elastic Beanstalk
        run: |
          aws s3 cp eureka-package.zip s3://${{ secrets.EB_EUREKA_BUCKET }}/eureka-${{ github.sha }}.zip
          aws elasticbeanstalk create-application-version \
            --application-name eureka \
            --version-label eureka-${{ github.sha }} \
            --source-bundle S3Bucket="${{ secrets.EB_EUREKA_BUCKET }}",S3Key="eureka-${{ github.sha }}.zip"
          aws elasticbeanstalk update-environment \
            --environment-name eureka-env \
            --version-label eureka-${{ github.sha }}

      - name: Load Docker images
        run: |
          for image in *-image.tar; do
            docker load < $image
          done

      - name: Push Docker images to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}
          for service in operation control schedule cache-service; do
            docker tag postco-apps:$service-${{ github.sha }} ${{ secrets.ECR_REPOSITORY }}/postco-apps:$service-${{ github.sha }}
            docker push ${{ secrets.ECR_REPOSITORY }}/postco-apps:$service-${{ github.sha }}
          done

      - name: Update docker-compose.yml with actual values
        run: |
          sed -i 's|${ECR_REGISTRY}|${{ secrets.ECR_REPOSITORY }}|g' docker-compose-prod.yml
          sed -i 's|${TAG}|${{ github.sha }}|g' docker-compose-prod.yml
          sed -i 's|${EUREKA_HOST}|${{ secrets.EUREKA_HOST }}|g' docker-compose-prod.yml

      - name: Deploy business services to Elastic Beanstalk
        run: |
          zip -r business-package.zip docker-compose-prod.yml .ebextensions
          aws s3 cp business-package.zip s3://${{ secrets.EB_BUSINESS_BUCKET }}/business-${{ github.sha }}.zip
          aws elasticbeanstalk create-application-version \
            --application-name business \
            --version-label business-${{ github.sha }} \
            --source-bundle S3Bucket="${{ secrets.EB_BUSINESS_BUCKET }}",S3Key="business-${{ github.sha }}.zip"
          aws elasticbeanstalk update-environment \
            --environment-name business-env \
            --version-label business-${{ github.sha }}