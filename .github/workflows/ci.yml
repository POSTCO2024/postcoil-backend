name: CI

on:
  push:
    branches: ['feat/cicd/yerimee', 'main']
  pull_request:
    branches: ['main']

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and package services
        run: |
          function build_service() {
            local service=$1
            echo "Building $service"
            cd $service
            ../gradlew clean build -x test -Dspring.profiles.active=prod
            mkdir -p deployment
            cp build/libs/*.jar deployment/application.jar
            echo "java -Dspring.profiles.active=prod -jar application.jar" > deployment/Procfile
            cp -r ../.ebextensions deployment/
            (cd deployment && zip -r ${service}-package.zip .)
            cd ..
          }

          build_service "gateway"
          build_service "eureka-server"

          for service in control operation schedule cache-service; do
            build_service $service
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7} $service
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7}
          done

      - name: Upload artifacts and deploy to S3
        run: |
          for service in gateway eureka-server; do
            aws s3 cp ${service}/deployment/${service}-package.zip s3://${{ secrets.EB_BUCKET }}/${service}-package-${GITHUB_SHA::7}.zip
          
            echo "Uploaded ${service}-package-${GITHUB_SHA::7}.zip to S3"
          
            actions/upload-artifact@v4 <<EOF
          {
            "name": "${service}-package",
            "path": "${service}/deployment/${service}-package.zip"
          }
          EOF
          done

      - name: Update deployment info
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}" > deployment_info.txt
          for service in control operation schedule cache-service; do
            echo "${service}=${ECR_REGISTRY}/${ECR_REPOSITORY}:${service}-${GITHUB_SHA::7}" >> deployment_info.txt
          done

      - name: Upload deployment info
        uses: actions/upload-artifact@v4
        with:
          name: deployment-info
          path: deployment_info.txt