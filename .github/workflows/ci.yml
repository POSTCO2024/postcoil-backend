name: CI

on:
  push:
    branches:
      - 'feat/cicd/yerimee'
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Gateway
        run: |
          cd gateway
          ../gradlew clean build -x test -Dspring.profiles.active=prod
          mkdir -p deployment
          cp build/libs/*.jar deployment/application.jar
          echo "java -Dspring.profiles.active=prod -jar application.jar" > deployment/Procfile
          cp -r ../.ebextensions deployment/
          cd deployment && zip -r gateway-package.zip .

      - name: Build Eureka
        run: |
          cd eureka-server
          ../gradlew clean build -x test -Dspring.profiles.active=prod
          mkdir -p deployment
          cp build/libs/*.jar deployment/application.jar
          echo "java -Dspring.profiles.active=prod -jar application.jar" > deployment/Procfile
          cp -r ../.ebextensions deployment/
          cd deployment && zip -r eureka-package.zip .

      - name: Build and push Docker images
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY
          
          # Build and push Redis service
          cd cache-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:redis-${GITHUB_SHA::7} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:redis-${GITHUB_SHA::7}
          cd ..
          
          # Build and push business app services
          for service in control operation schedule; do
            cd $service
            ../gradlew clean build -x test -Dspring.profiles.active=prod
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7} .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7}
            cd ..
          done

      - name: Upload Gateway artifact
        uses: actions/upload-artifact@v4
        with:
          name: gateway-package
          path: gateway/deployment/gateway-package.zip

      - name: Upload Eureka artifact
        uses: actions/upload-artifact@v4
        with:
          name: eureka-package
          path: eureka-server/deployment/eureka-package.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp gateway/deployment/gateway-package.zip s3://${{ secrets.EB_BUCKET }}/gateway-package.zip
          aws s3 cp eureka-server/deployment/eureka-package.zip s3://${{ secrets.EB_BUCKET }}/eureka-package.zip