name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'corretto'

      - name: Set environment variables
        run: |
          echo "EUREKA_HOST=${{ secrets.EUREKA_HOST }}" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> $GITHUB_ENV
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> $GITHUB_ENV
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "KAFKA_BROKER=${{ secrets.KAFKA_BROKER }}" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV  # prod 프로파일 활성화

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Docker images for each service
        run: |
          for service in operation control schedule cache-service; do
            cd $service
            ../gradlew clean build -x test -Dspring.profiles.active=prod --warning-mode all
            docker build --build-arg REDIS_HOST=${REDIS_HOST} --build-arg REDIS_PORT=${REDIS_PORT} \
              --build-arg DB_URL=${DB_URL} --build-arg DB_USERNAME=${DB_USERNAME} \
              --build-arg DB_PASSWORD=${DB_PASSWORD} --build-arg KAFKA_BROKER=${KAFKA_BROKER} \
              --build-arg SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE} \
              -t postco-apps:$service-${{ github.sha }} .
            docker save postco-apps:$service-${{ github.sha }} > ../$service-image.tar
            cd ..
          done

      - name: Upload Docker images
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: "*-image.tar"
          retention-days: 1