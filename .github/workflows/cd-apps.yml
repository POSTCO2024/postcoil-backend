name: CD - Business Apps

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Docker images artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: .

      - name: Load Docker images
        run: docker load < docker-images.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker images to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          for service in redis control operation schedule; do
            docker tag $service:${GITHUB_SHA::7} $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7}
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$service-${GITHUB_SHA::7}
          done

      - name: Deploy services to ECS
        run: |
          for service in control operation schedule; do
            aws ecs update-service --cluster postco-cluster --service $service-service --force-new-deployment
          done

          aws ecs update-service --cluster postco-cluster --service redis-service --force-new-deployment